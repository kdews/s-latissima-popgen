#######################################
# Example MultiQC Configuration File
#######################################

# This file can be saved either in the MultiQC installation
# directory, or as ~/.multiqc_config.yaml

# Configuration settings are taken from the following locations, in order:
# - Hardcoded in MultiQC (multiqc/utils/config.py)
# - <installation_dir>/multiqc_config.yaml
# - ~/.multiqc_config.yaml
# - Command line options

# Note that all of the values below are set to the MultiQC defaults.
# It's recommended that you delete any that you don't need.

---
# Title to use for the report.
title: "S. latissima gametophyte WGS QC"

# Disable the analysis paths and time in the report header
show_analysis_paths: False
show_analysis_time: False

# Output filenames
output_fn_name: multiqc_report.html
data_dir_name: multiqc_data

# Whether to create the parsed data directory in addition to the report
make_data_dir: True

# Cleaning options for sample names. Typically, sample names are detected
# from an input filename. If any of these strings are found, they and any
# text to their right will be discarded.
# For example - file1.fq.gz_trimmed.bam_deduplicated_fastqc.zip
# would be cleaned to 'file1'
# Two options here - fn_clean_exts will remove the defaults,
# extra_fn_clean_exts will append to the defaults
extra_fn_clean_exts:
  - .gz
  - .fastq
  - .fq
  - .bam
  - .sam
  - .sra
  - _tophat
  - _star_aligned
  - _fastqc
  - type: remove
    pattern: ".sorted"
  - type: regex
    pattern: '^Sample_\d+'
  - type: regex_keep
    pattern: "[A-Z]{3}[1-9]{4}[A,B][1-9]"

# Ignore files larger than this when searching for logs (bytes)
log_filesize_limit: 5000000

# MultiQC skips a couple of debug messages when searching files as the
# log can get very verbose otherwise. Re-enable here to help debugging.
report_readerrors: False
report_imgskips: False

# Opt-out of remotely checking that you're running the latest version
no_version_check: True

# How to plot graphs. Different templates can override these settings, but
# the default template can use interactive plots (Javascript using HighCharts)
# or flat plots (images, using MatPlotLib). With interactive plots, the report
# can prevent automatically rendering all graphs if there are lots of samples
# to prevent the browser being locked up when the report opens.
plots_force_flat: False # Try to use only flat image graphs
plots_force_interactive: False # Try to use only interactive javascript graphs
plots_flat_numseries: 100 # If neither of the above, use flat if > this number of datasets
num_datasets_plot_limit: 50 # If interactive, don't plot on load if > this number of datasets
max_table_rows: 500 # Swap tables for a beeswarm plot above this

# Change module order
module_order:
  - fastqc:
      name: "FastQC (raw)"
      info: "This section of the report shows FastQC results BEFORE adapter trimming."
      anchor: "fastqc_raw"
      path_filters:
        - "*_R1_fastqc.zip"
  - cutadapt
  - fastqc:
      name: "FastQC (trimmed)"
      anchor: "fastqc_trimmed"
      info: "This section of the report shows FastQC results AFTER adapter trimming."
      target: ""
      path_filters:
        - "*val_1_fastqc.zip"
